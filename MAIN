import tkinter as tk
from tkinter import messagebox, ttk
from tkcalendar import DateEntry
from datetime import datetime, timedelta


# Config filer
project_type = ["Underhåll", "Miljö", "Provning", "Utveckling", "Affärer"]
project_leader = ["Adam Falk", "Samuel Meyer"]
project_positions = []


# Funktion för att lägga till ett projekt och rita det som ett Gantt-schema
def add_project():
    project_name = entry_project_name.get()
    start_date = cal_start_date.get_date()
    end_date = cal_end_date.get_date()
    project_typ = project_type.get()
    project_ledare = project_leader.get()
    project_storlek = project_size.get()
    projekt_storlek = int(project_storlek)
    value_x = 150
    value_y = 100

    # Kontrollera om alla fält är ifyllda
    if not project_name:
        messagebox.showwarning("ERROR", "Fyll i alla fällt")
        return

    # Kontrollera vilken färg som Gantt-Schemat ska ha
    if project_typ == 'Miljö':
        gnatt_color = 'green'
    elif project_typ == 'Provning':
        gnatt_color = 'blue'
    elif project_typ == 'Underhåll':
        gnatt_color = 'yellow'
    elif project_typ == 'Utveckling':
        gnatt_color = 'red'
    elif project_typ == 'Affärer':
        gnatt_color = 'pink'
    else:
        gnatt_color = 'black'

    if projekt_storlek > 1000:
        value_h = 40
    else:
        value_h = 20

    # Räkna ut antalet dagar mellan start och slutdatum
    delta_days = (end_date - start_date).days

    # Beräkna lämplig y-koordinat för projektet
    start_y = value_y + 5 + len(project_positions) * (value_h + value_h)
    cell_height = value_h + value_h

    # Lägg till Gantt-schema på canvas
    canvas.create_rectangle(value_x, start_y, value_x + delta_days * 20, start_y + cell_height,
                            fill=gnatt_color, outline="black", tags="project")

    # Lägg till y-koordinaten för detta projekt i listan
    project_positions.append(start_y)

    # Uppdatera canvasens scrollregion för att inkludera alla objekt
    canvas.configure(scrollregion=canvas.bbox("all"))

    # Skriv ut information om projektet
    print(f"PROJEKT INFORMATION")
    print(f"Projektnamn: {project_name}")
    print(f"Projekttyp: {project_typ}")
    print(f"Projektledare: {project_ledare}")
    print(f"Projektstorlek: {projekt_storlek}")
    print(f"Start datum: {start_date}")
    print(f"Slut datum: {end_date}")
    print(f"GANTSCHEMA INFORMATION")

    # Räkna ut antalet dagar mellan start och slutdatum
    delta_days = (end_date - start_date).days

    # Skapa ett Gantt-schema för projektet
    start_x = value_x
    start_y = value_y + value_y
    cell_height = value_h + value_h


# Skapa huvudfönstret
root = tk.Tk()
root.title("Gantt Chart")

# Skapa etiketter och inmatningsfält för att mata in projektinformation
tk.Label(root, text="Projekt Namn:").pack()
entry_project_name = tk.Entry(root)
entry_project_name.pack()

tk.Label(root, text="Projekttyp:").pack()
project_type = ttk.Combobox(root, values=project_type)
project_type.pack(pady=10)

tk.Label(root, text="Projektledare:").pack()
project_leader = ttk.Combobox(root, values=project_leader)
project_leader.pack(pady=10)

tk.Label(root, text="Projekt Storlek:").pack()
project_size = tk.Entry(root)
project_size.pack()

tk.Label(root, text="Start Datum:").pack()
cal_start_date = DateEntry(root, width=12, background='white', foreground='black', borderwidth=2)
cal_start_date.pack(pady=5)

tk.Label(root, text="Stopp Datum:").pack()
cal_end_date = DateEntry(root, width=12, background='white', foreground='black', borderwidth=2)
cal_end_date.pack(pady=5)

# Skapa knapp för att lägga till projekt och rita det som ett Gantt-schema
tk.Button(root, text="Add Project", command=add_project).pack(pady=10)

# Skapa en ram för att innehålla Canvas och Scrollbar
frame = tk.Frame(root)
frame.pack(pady=20)

# Skapa en Canvas för att rita Gantt-schemat
canvas = tk.Canvas(frame, width=1000, height=500, bg="white")
canvas.pack(side="left", fill="both", expand=True)

# Skapa en Scrollbar för vertikal scrollning
scrollbar_y = ttk.Scrollbar(frame, orient="vertical", command=canvas.yview)
scrollbar_y.pack(side="right", fill="y")

# Skapa en Scrollbar för horisontell scrollning
scrollbar_x = ttk.Scrollbar(root, orient="horizontal", command=canvas.xview)
scrollbar_x.pack(side="bottom", fill="x")

# Koppla Scrollbar till Canvas
canvas.configure(yscrollcommand=scrollbar_y.set, xscrollcommand=scrollbar_x.set)
canvas.bind("<Configure>", lambda e: canvas.configure(scrollregion=canvas.bbox("all")))

# Rita årtal och kvartal på canvasen
start_year = 2023
for year in range(start_year, start_year + 5):  # Rita 5 år framåt
    for quarter in range(1, 5):  # Kvartal 1 till 4
        x = 150 + (year - start_year) * 400 + quarter * 100
        y = 50
        canvas.create_text(x, y, text=f"{year}\nQ{quarter}", anchor="n")

        # Rita ett streck efter varje kvartal (förutom det sista kvartalet i ett år)
        if quarter < 4 or year < start_year + 4:  # Kolla om det inte är det sista kvartalet på det sista året
            line_x = x + 50  # Lägg till en offset för att rita linjen efter texten
            line_y_start = y + 10  # Y-koordinat för starten av linjen
            line_y_end = y + 30  # Y-koordinat för slutet av linjen
            canvas.create_line(line_x, line_y_start, line_x, line_y_end, fill="gray")

# Starta huvudloopen för applikationen
root.mainloop()
